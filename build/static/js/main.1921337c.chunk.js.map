{"version":3,"sources":["config/Fire.js","components/navbar/Navbar.jsx","components/header/Header.jsx","components/Home.js","components/LoginRegister.js","components/pages/Profile.jsx","components/pages/Statement.jsx","components/pages/Events.jsx","App.js","serviceWorker.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Navbar","logout","e","preventDefault","auth","signOut","className","activeClassName","exact","to","onClick","this","Component","Header","Home","LoginRegister","props","handleChange","setState","target","name","value","login","signInWithEmailAndPassword","state","email","password","catch","error","fireErrors","message","formTitle","loginBtn","errorMessage","Container","component","maxWidth","CssBaseline","Avatar","Typography","variant","noValidate","TextField","margin","required","fullWidth","id","label","autoComplete","autoFocus","onChange","type","FormControlLabel","control","Checkbox","color","Button","Grid","container","item","xs","Link","href","forgotPassword","Profile","Statement","Events","App","user","authListener","onAuthStateChanged","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","console"],"mappings":"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","file":"static/js/main.1921337c.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyAUUNmli845Sw2rMiOLtaUkpzb8ln2sgM4\",\r\n    authDomain: \"mysociety-a6e13.firebaseapp.com\",\r\n    databaseURL: \"https://mysociety-a6e13.firebaseio.com\",\r\n    projectId: \"mysociety-a6e13\",\r\n    storageBucket: \"mysociety-a6e13.appspot.com\",\r\n    messagingSenderId: \"660337765859\",\r\n    appId: \"1:660337765859:web:5a40d4b5fbdd958bfec4d6\"\r\n};\r\n\r\nconst fire = firebase.initializeApp(config);\r\nexport default fire;","import React, { Component } from 'react';\r\nimport fire from '../../config/Fire';\r\nimport {\r\n    NavLink, Link\r\n} from \"react-router-dom\";\r\nimport './Navbar.css';\r\n\r\nclass Navbar extends Component{\r\n\r\n    logout = (e) => {\r\n        e.preventDefault();\r\n        fire.auth().signOut();\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <nav className=\"navbar navbar-default navbar-static-top\">\r\n                    <ul className=\"nav nav-pills\">\r\n                        <li><NavLink activeClassName=\"active\" exact className=\"btn btn-primary\" to=\"/\">Home</NavLink></li>\r\n                        <li><NavLink activeClassName=\"active\" className=\"btn btn-primary\" to=\"/profile\">Profile</NavLink></li>\r\n                        <li><NavLink activeClassName=\"active\" className=\"btn btn-primary\" to=\"/statement\">Statement</NavLink></li>\r\n                        <li><NavLink activeClassName=\"active\" className=\"btn btn-primary\" to=\"/events\">Events</NavLink></li>\r\n                        <li><Link className=\"btn btn-primary logoutButton\" onClick={this.logout}>LogOut</Link></li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react';\r\nimport Navbar from '../navbar/Navbar';\r\n\r\nclass Header extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Navbar />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport fire from '../config/Fire';\r\nimport Header from './header/Header';\r\n\r\nclass Home extends Component{\r\n\r\n    logout = () => {\r\n        fire.auth().signOut();\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>My Society</h1>\r\n                <Header />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport fire from '../config/Fire';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     paper: {\r\n//       marginTop: theme.spacing(8),\r\n//       display: 'flex',\r\n//       flexDirection: 'column',\r\n//       alignItems: 'center',\r\n//     },\r\n//     avatar: {\r\n//       margin: theme.spacing(1),\r\n//       backgroundColor: theme.palette.secondary.main,\r\n//     },\r\n//     form: {\r\n//       width: '100%', // Fix IE 11 issue.\r\n//       marginTop: theme.spacing(1),\r\n//     },\r\n//     submit: {\r\n//       margin: theme.spacing(3, 0, 2),\r\n//     },\r\n//   }));\r\n\r\n\r\n\r\nclass LoginRegister extends Component {\r\n \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            fireErrors: '',\r\n            formTitle: 'Login Form',\r\n            loginBtn: true\r\n        };\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    login = e => {\r\n        e.preventDefault();\r\n        fire.auth().signInWithEmailAndPassword(this.state.email, this.state.password)\r\n        .catch((error) => {\r\n            this.setState({fireErrors: error.message})\r\n        });\r\n    }\r\n\r\n\r\n  render(){\r\n\r\n    let errorMessage = this.state.fireErrors ?\r\n        (<div>{this.state.fireErrors}</div>) : null;\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n<Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div>\r\n      {errorMessage}\r\n        <Avatar>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Login Form\r\n        </Typography>\r\n        <form  noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value={this.state.email}\r\n            onChange={this.handleChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={this.state.password}\r\n            onChange={this.handleChange}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\"loginBtn\" onClick={this.login} \r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" onClick={this.forgotPassword} variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n\r\n    </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginRegister;\r\n","import React, { Component } from 'react';\r\nimport Header from '../header/Header';\r\n\r\nclass Profile extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>My Profile</h1>\r\n                <Header />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile;","import React, { Component } from 'react';\r\nimport Header from '../header/Header';\r\n\r\nclass Statement extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>My Statement</h1>\r\n                <Header />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Statement;","import React, { Component } from 'react';\r\nimport Header from '../header/Header';\r\n\r\nclass Events extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>Events</h1>\r\n                <Header />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Events;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport fire from './config/Fire';\r\nimport Home from './components/Home';\r\nimport Login from './components/LoginRegister';\r\nimport Profile from './components/pages/Profile';\r\nimport Statement from './components/pages/Statement';\r\nimport Events from './components/pages/Events';\r\n\r\nclass App extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      user: null\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.authListener();\r\n  }\r\n  authListener(){\r\n    fire.auth().onAuthStateChanged((user) => {\r\n      if(user){\r\n        this.setState({user});\r\n      }else{\r\n        this.setState({user:null});\r\n      }\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Router>\r\n        {this.state.user ? (\r\n          <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/profile\">\r\n            <Profile />\r\n          </Route>\r\n          <Route path=\"/statement\">\r\n            <Statement />\r\n          </Route>\r\n          <Route path=\"/events\">\r\n            <Events />\r\n          </Route>\r\n        </Switch>\r\n        ) : (<Login />)}\r\n      \r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}